library('pracma')
library('dplyr')
library('ggplot2')
library('ggthemes')
library('jsonlite')
setwd("~/Documents/Research/Lines/line-metaphors")
lowerCI <- function(v) {
mean(v) - sd(v)*1.96/sqrt(length(v))
}
upperCI <- function(v) {
mean(v) + sd(v)*1.96/sqrt(length(v))
}
plotCIs <- function(dataFrame, x_variable, y_variable, xlabel, ylabel, levels=NA, zeroLine=NA) {
if (!is.na(levels)) {
p <- ggplot(dataFrame, aes(x=factor(x_variable, levels=levels), y=y_variable))
} else {
p <- ggplot(dataFrame, aes(x=x_variable, y=y_variable))
}
if (!is.na(zeroLine)) {
p <- p + geom_hline(yintercept=0, linetype=zeroLine)
}
p <- p +
stat_summary(fun.min=lowerCI, fun.max=upperCI, fun=mean, geom="pointrange") +
labs(x = xlabel, y = ylabel, title='')
p + theme_minimal()
}
PAPERIMGPATH <- "img/"
savepdf <- function(filename, width, height) {
ggsave(paste(PAPERIMGPATH, filename, sep=""), device="pdf", width=width, height=height)
}
crossings <- read.csv('results/main-results-crossings.csv')
View(crossings)
firstStep <- crossings %>% filter(step = 3)
firstStep <- crossings %>% filter(step == 3)
View(firstStep)
View(crossings)
firstStep <- crossings %>% filter(step == 4)
firstStep <- crossings %>% filter(step == 5)
results <- readLines(file('public/data/main-results.jsonl', open='r'))
j <- lapply(results, fromJSON)
id <- c()
stepID <- c()
metaphor <- c()
style <- c()
focus_intercept <- c()
focus_coeff <- c()
focus_angle <- c()
user_intercept <- c()
user_coeff <- c()
user_angle <- c()
rsquared <- c()
termslope <- c()
focus_rmse <- c()
user_rmse <- c()
crossing_x <- c()
updown <- c()
total_pred <- c()
total_pred['crossing'] <- 0
total_pred['converging'] <- 0
total_pred['diverging'] <- 0
correct <- c()
correct['crossing'] <- 0
correct['converging'] <- 0
correct['diverging'] <- 0
for (i in 1:length(j)) {
if (j[[i]]$part == 'B') {
id <- append(id, j[[i]]$id)
stepID <- append(stepID, j[[i]]$stepID)
metaphor <- append(metaphor, j[[i]]$metaphor)
style <- append(style, j[[i]]$style)
df <- data.frame(j[[i]]$focusdata)
linreg <- lm(y ~ x, df)
focus_intercept <- append(focus_intercept, linreg$coefficients[1])
focus_coeff <- append(focus_coeff, linreg$coefficients[2])
focus_angle <- append(focus_angle, atan(linreg$coefficients[2]))
focus_rmse <- append(focus_rmse, sqrt(c(crossprod(linreg$residuals))/length(linreg$residuals)))
df <- data.frame(j[[i]]$userdata)
linreg <- lm(y ~ x, df)
a <- linreg$coefficients[2]
c <- linreg$coefficients[1]
user_intercept <- append(user_intercept, linreg$coefficients[1])
user_coeff <- append(user_coeff, linreg$coefficients[2])
user_angle <- append(user_angle, atan(linreg$coefficients[2]))
user_rmse <- append(user_rmse, sqrt(c(crossprod(linreg$residuals))/length(linreg$residuals)))
# crossing point of target and recreated regression lines
df <- data.frame(j[[i]]$refdata)
linreg <- lm(y ~ x, df)
b <- linreg$coefficients[2]
d <- linreg$coefficients[1]
crossing <- (d-c)/(a-b)
crossing_x <- append(crossing_x, crossing)
if (crossing > 100) {
total_pred['converging'] <- total_pred['converging'] + 1
if (j[[i]]$metaphor == 'converge') {
correct['converging'] <- correct['converging'] + 1
}
} else if (crossing < 0) {
total_pred['diverging'] <- total_pred['diverging'] + 1
if (j[[i]]$metaphor == 'diverge') {
correct['diverging'] <- correct['diverging'] + 1
}
} else { # crossing
total_pred['crossing'] <- total_pred['crossing'] + 1
if (j[[i]]$metaphor == 'cross') {
correct['crossing'] <- correct['crossing'] + 1
}
}
df <- data.frame(uy=j[[i]]$userdata$y, fy=j[[i]]$focusdata$y)
linreg <- lm(uy ~ fy, df)
rsquared <- append(rsquared, summary(linreg)$r.squared)
termslope_focus <- atan2(j[[i]]$focusdata$y[11]-j[[i]]$focusdata$y[10], 100/11)
termslope_user <- atan2(j[[i]]$userdata$y[11]-j[[i]]$userdata$y[10], 100/11)
#        termslope <- append(termslope, termslope_user/termslope_focus)
termslope <- append(termslope, termslope_user-termslope_focus)
updown <- append(updown, ifelse(j[[i]]$metaphor=='diverge', 'down', 'up'))
}
}
df <- data.frame(id, stepID, metaphor, style, focus_intercept, focus_coeff,
user_intercept, user_coeff, coeff_rel=user_coeff/focus_coeff,
focus_angle, user_angle,
global_angle_diff=user_angle-focus_angle, global_angle_diff_abs=abs(user_angle-focus_angle),
rsquared, termslope, crossing_x, user_rmse, focus_rmse, updown,
relative_rmse=user_rmse/focus_rmse)
View(df)
View(j)
View(j)
View(df)
id <- c()
step <- c()
stepID <- c()
metaphor <- c()
style <- c()
focus_intercept <- c()
focus_coeff <- c()
focus_angle <- c()
user_intercept <- c()
user_coeff <- c()
user_angle <- c()
rsquared <- c()
termslope <- c()
focus_rmse <- c()
user_rmse <- c()
crossing_x <- c()
updown <- c()
total_pred <- c()
total_pred['crossing'] <- 0
total_pred['converging'] <- 0
total_pred['diverging'] <- 0
correct <- c()
correct['crossing'] <- 0
correct['converging'] <- 0
correct['diverging'] <- 0
for (i in 1:length(j)) {
if (j[[i]]$part == 'B') {
id <- append(id, j[[i]]$id)
step <- append(step, j[[i]]$step)
stepID <- append(stepID, j[[i]]$stepID)
metaphor <- append(metaphor, j[[i]]$metaphor)
style <- append(style, j[[i]]$style)
df <- data.frame(j[[i]]$focusdata)
linreg <- lm(y ~ x, df)
focus_intercept <- append(focus_intercept, linreg$coefficients[1])
focus_coeff <- append(focus_coeff, linreg$coefficients[2])
focus_angle <- append(focus_angle, atan(linreg$coefficients[2]))
focus_rmse <- append(focus_rmse, sqrt(c(crossprod(linreg$residuals))/length(linreg$residuals)))
df <- data.frame(j[[i]]$userdata)
linreg <- lm(y ~ x, df)
a <- linreg$coefficients[2]
c <- linreg$coefficients[1]
user_intercept <- append(user_intercept, linreg$coefficients[1])
user_coeff <- append(user_coeff, linreg$coefficients[2])
user_angle <- append(user_angle, atan(linreg$coefficients[2]))
user_rmse <- append(user_rmse, sqrt(c(crossprod(linreg$residuals))/length(linreg$residuals)))
# crossing point of target and recreated regression lines
df <- data.frame(j[[i]]$refdata)
linreg <- lm(y ~ x, df)
b <- linreg$coefficients[2]
d <- linreg$coefficients[1]
crossing <- (d-c)/(a-b)
crossing_x <- append(crossing_x, crossing)
if (crossing > 100) {
total_pred['converging'] <- total_pred['converging'] + 1
if (j[[i]]$metaphor == 'converge') {
correct['converging'] <- correct['converging'] + 1
}
} else if (crossing < 0) {
total_pred['diverging'] <- total_pred['diverging'] + 1
if (j[[i]]$metaphor == 'diverge') {
correct['diverging'] <- correct['diverging'] + 1
}
} else { # crossing
total_pred['crossing'] <- total_pred['crossing'] + 1
if (j[[i]]$metaphor == 'cross') {
correct['crossing'] <- correct['crossing'] + 1
}
}
df <- data.frame(uy=j[[i]]$userdata$y, fy=j[[i]]$focusdata$y)
linreg <- lm(uy ~ fy, df)
rsquared <- append(rsquared, summary(linreg)$r.squared)
termslope_focus <- atan2(j[[i]]$focusdata$y[11]-j[[i]]$focusdata$y[10], 100/11)
termslope_user <- atan2(j[[i]]$userdata$y[11]-j[[i]]$userdata$y[10], 100/11)
#        termslope <- append(termslope, termslope_user/termslope_focus)
termslope <- append(termslope, termslope_user-termslope_focus)
updown <- append(updown, ifelse(j[[i]]$metaphor=='diverge', 'down', 'up'))
}
}
df <- data.frame(id, step, stepID, metaphor, style, focus_intercept, focus_coeff,
user_intercept, user_coeff, coeff_rel=user_coeff/focus_coeff,
focus_angle, user_angle,
global_angle_diff=user_angle-focus_angle, global_angle_diff_abs=abs(user_angle-focus_angle),
rsquared, termslope, crossing_x, user_rmse, focus_rmse, updown,
relative_rmse=user_rmse/focus_rmse)
View(df)
firstStep <- df %>% filter(step == 3)
ggplot(firstStep, aes(metaphor)) + geom_histogram()
ggplot(firstStep, aes(metaphor, stat = "count"))
ggplot(firstStep, aes(metaphor))
ggplot(firstStep, aes(metaphor)) + geom_bar()
ggplot(firstStep, aes(metaphor), title="First Metaphor Seen") + geom_bar()
ggplot(firstStep, aes(metaphor), labs(title="First Metaphor Seen")) + geom_bar()
ggplot(firstStep, aes(metaphor)) + geom_bar() + labs(title="First Metaphor Seen")
ggplot(firstStep, aes(style)) + geom_bar() + labs(title="First Style Seen")
